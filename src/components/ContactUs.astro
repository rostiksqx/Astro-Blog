---
import Button from "./Button.astro";

const secretKey = import.meta.env.PUBLIC_SECRET_KEY;
---

<section class="w-full py-12 md:py-24 lg:py-32 bg-[#e9d7cb]" id="contact">
  <div
    class="grid items-center justify-center gap-4 px-4 text-center md:px-6 lg:gap-10"
  >
    <div class="space-y-3">
      <h1
        class="lg:leading-tighter text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl xl:text-[3.4rem] 2xl:text-[4rem] text-[#3b2a22]"
      >
        Contact Us
      </h1>
      <p
        class="mx-auto max-w-[600px] text-[#3b2a22] md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed"
      >
        Have a question or want to learn more? Fill out the form below and we'll
        get back to you as soon as possible.
      </p>
    </div>
    <div class="mx-auto w-full max-w-sm space-y-2">
      <form class="flex flex-col space-y-2" method="POST" id="form">
        <input type="hidden" name="access_key" value={secretKey} />
        <div class="grid grid-cols-2 gap-4">
          <div class="space-y-1">
            <label
              class="text-xl font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 text-[#3b2a22]"
              for="name"
            >
              Name
            </label>
            <input
              class="flex h-10 w-full rounded-md border px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 bg-[#e9d7cb] border-[#3b2a22] focus:ring-[#3b2a22]"
              id="name"
              required
              placeholder="Enter your name"
              name="name"
            />
          </div>
          <div class="space-y-1">
            <label
              class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 text-[#3b2a22]"
              for="email"
            >
              Email
            </label>
            <input
              class="flex h-10 w-full rounded-md border px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 bg-[#e9d7cb] border-[#3b2a22] focus:ring-[#3b2a22]"
              id="email"
              type="email"
              placeholder="Enter your email"
              required
              name="email"
            />
          </div>
        </div>
        <div class="space-y-1">
          <label
            class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 text-[#3b2a22]"
            for="message"
          >
            Message
          </label>
          <textarea
            class="flex w-full rounded-md border px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 min-h-[100px] bg-[#e9d7cb] border-[#3b2a22] focus:ring-[#3b2a22]"
            id="message"
            placeholder="Enter your message"
            required
            name="message"></textarea>
        </div>
        <Button type="submit">Submit</Button>
        <div id="result" class="text-xl font-bold"></div>
      </form>
    </div>
  </div>
</section>

<script is:inline>
  const form = document.getElementById("form");
  const result = document.getElementById("result");

  form.addEventListener("submit", function (e) {
    const formData = new FormData(form);
    e.preventDefault();

    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);

    result.innerHTML = "Please wait...";

    fetch("https://api.web3forms.com/submit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: json,
    })
      .then(async (response) => {
        let json = await response.json();
        if (response.status == 200) {
          result.innerHTML = json.message;
        } else {
          console.log(response);
          result.style.color = "red";
          result.innerHTML = "Something went wrong!";
        }
      })
      .catch((error) => {
        console.log(error);
        result.innerHTML = "Something went wrong!";
      })
      .then(function () {
        form.reset();
        setTimeout(() => {
          result.style.display = "none";
        }, 10000);
      });
  });
</script>
